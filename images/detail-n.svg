<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="182" onload="init(evt)" viewBox="0 0 1200 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="182.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="165" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="165" > </text>
<g id="frames">
<g >
<title>aggregation (162,080,466 samples, 5.41%)</title><rect x="148.3" y="53" width="63.8" height="15.0" fill="rgb(230,45,37)" rx="2" ry="2" />
<text  x="151.26" y="63.5" >aggrega..</text>
</g>
<g >
<title>build_leaf_collector (300,208,592 samples, 10.02%)</title><rect x="790.4" y="69" width="118.3" height="15.0" fill="rgb(248,112,34)" rx="2" ry="2" />
<text  x="793.37" y="79.5" >build_leaf_col..</text>
</g>
<g >
<title>search_query_phase (779,799,280 samples, 26.04%)</title><rect x="385.9" y="69" width="307.3" height="15.0" fill="rgb(230,217,22)" rx="2" ry="2" />
<text  x="388.90" y="79.5" >search_query_phase</text>
</g>
<g >
<title>rewrite (3,053,559 samples, 0.10%)</title><rect x="220.0" y="85" width="1.2" height="15.0" fill="rgb(254,128,51)" rx="2" ry="2" />
<text  x="223.00" y="95.5" ></text>
</g>
<g >
<title>collector (324,945,503 samples, 10.85%)</title><rect x="84.1" y="85" width="128.1" height="15.0" fill="rgb(239,88,16)" rx="2" ry="2" />
<text  x="87.15" y="95.5" >collector</text>
</g>
<g >
<title>topdomains (386,416,517 samples, 12.90%)</title><rect x="224.6" y="85" width="152.3" height="15.0" fill="rgb(253,9,17)" rx="2" ry="2" />
<text  x="227.61" y="95.5" >topdomains</text>
</g>
<g >
<title>rewrite (5,283,800 samples, 0.18%)</title><rect x="1187.9" y="85" width="2.1" height="15.0" fill="rgb(218,47,21)" rx="2" ry="2" />
<text  x="1190.92" y="95.5" ></text>
</g>
<g >
<title>build_scorer (967,323 samples, 0.03%)</title><rect x="215.9" y="53" width="0.4" height="15.0" fill="rgb(216,63,19)" rx="2" ry="2" />
<text  x="218.87" y="63.5" ></text>
</g>
<g >
<title>build_aggregation (6,915,346 samples, 0.23%)</title><rect x="908.7" y="69" width="2.7" height="15.0" fill="rgb(226,161,53)" rx="2" ry="2" />
<text  x="911.68" y="79.5" ></text>
</g>
<g >
<title>TermQuery (15,587,914 samples, 0.52%)</title><rect x="1174.7" y="53" width="6.1" height="15.0" fill="rgb(246,82,3)" rx="2" ry="2" />
<text  x="1177.65" y="63.5" ></text>
</g>
<g >
<title>build_aggregation (327,383 samples, 0.01%)</title><rect x="774.0" y="69" width="0.1" height="15.0" fill="rgb(215,169,54)" rx="2" ry="2" />
<text  x="776.99" y="79.5" ></text>
</g>
<g >
<title>build_scorer (1,773,164 samples, 0.06%)</title><rect x="732.0" y="53" width="0.7" height="15.0" fill="rgb(224,33,41)" rx="2" ry="2" />
<text  x="735.03" y="63.5" ></text>
</g>
<g >
<title>build_aggregation (504,861 samples, 0.02%)</title><rect x="221.2" y="69" width="0.2" height="15.0" fill="rgb(231,11,14)" rx="2" ry="2" />
<text  x="224.20" y="79.5" ></text>
</g>
<g >
<title>ctJndPhMQiqGBrPkb5kw9Q (1,402,914,193 samples, 46.85%)</title><rect x="221.2" y="117" width="552.8" height="15.0" fill="rgb(220,194,39)" rx="2" ry="2" />
<text  x="224.20" y="127.5" >ctJndPhMQiqGBrPkb5kw9Q</text>
</g>
<g >
<title>dailycounts (8,762,840 samples, 0.29%)</title><rect x="774.0" y="85" width="3.4" height="15.0" fill="rgb(211,95,36)" rx="2" ry="2" />
<text  x="776.99" y="95.5" ></text>
</g>
<g >
<title>TermQuery (9,321,943 samples, 0.31%)</title><rect x="212.2" y="53" width="3.7" height="15.0" fill="rgb(247,57,51)" rx="2" ry="2" />
<text  x="215.20" y="63.5" ></text>
</g>
<g >
<title>toplangs (22,905,722 samples, 0.76%)</title><rect x="376.9" y="85" width="9.0" height="15.0" fill="rgb(205,145,37)" rx="2" ry="2" />
<text  x="379.87" y="95.5" ></text>
</g>
<g >
<title>build_leaf_collector (3,897,590 samples, 0.13%)</title><rect x="10.1" y="69" width="1.5" height="15.0" fill="rgb(205,86,22)" rx="2" ry="2" />
<text  x="13.09" y="79.5" ></text>
</g>
<g >
<title>topdomains (171,223,837 samples, 5.72%)</title><rect x="11.6" y="85" width="67.5" height="15.0" fill="rgb(225,148,30)" rx="2" ry="2" />
<text  x="14.65" y="95.5" >topdoma..</text>
</g>
<g >
<title>create_weight (98,105,104 samples, 3.28%)</title><rect x="693.4" y="37" width="38.6" height="15.0" fill="rgb(225,68,14)" rx="2" ry="2" />
<text  x="696.37" y="47.5" >cre..</text>
</g>
<g >
<title>BooleanQuery (19,833,075 samples, 0.66%)</title><rect x="212.2" y="69" width="7.8" height="15.0" fill="rgb(240,81,11)" rx="2" ry="2" />
<text  x="215.18" y="79.5" ></text>
</g>
<g >
<title>search_query_phase (654,184,254 samples, 21.84%)</title><rect x="916.9" y="69" width="257.7" height="15.0" fill="rgb(230,9,45)" rx="2" ry="2" />
<text  x="919.86" y="79.5" >search_query_phase</text>
</g>
<g >
<title>topdomains (333,049,914 samples, 11.12%)</title><rect x="777.4" y="85" width="131.3" height="15.0" fill="rgb(205,23,5)" rx="2" ry="2" />
<text  x="780.45" y="95.5" >topdomains</text>
</g>
<g >
<title>search_query_phase (324,945,503 samples, 10.85%)</title><rect x="84.1" y="69" width="128.1" height="15.0" fill="rgb(243,139,25)" rx="2" ry="2" />
<text  x="87.15" y="79.5" >search_query_phase</text>
</g>
<g >
<title>create_weight (9,498,546 samples, 0.32%)</title><rect x="216.3" y="53" width="3.7" height="15.0" fill="rgb(234,30,6)" rx="2" ry="2" />
<text  x="219.26" y="63.5" ></text>
</g>
<g >
<title>BooleanQuery (33,716,656 samples, 1.13%)</title><rect x="1174.6" y="69" width="13.3" height="15.0" fill="rgb(233,174,24)" rx="2" ry="2" />
<text  x="1177.63" y="79.5" ></text>
</g>
<g >
<title>aggregation (389,147,389 samples, 12.99%)</title><rect x="539.7" y="53" width="153.3" height="15.0" fill="rgb(241,212,14)" rx="2" ry="2" />
<text  x="542.67" y="63.5" >aggregation</text>
</g>
<g >
<title>aggregations (417,971,923 samples, 13.96%)</title><rect x="221.2" y="101" width="164.7" height="15.0" fill="rgb(205,98,30)" rx="2" ry="2" />
<text  x="224.20" y="111.5" >aggregations</text>
</g>
<g >
<title>build_leaf_collector (7,979,161 samples, 0.27%)</title><rect x="221.4" y="69" width="3.1" height="15.0" fill="rgb(220,203,8)" rx="2" ry="2" />
<text  x="224.40" y="79.5" ></text>
</g>
<g >
<title>query (19,833,075 samples, 0.66%)</title><rect x="212.2" y="85" width="7.8" height="15.0" fill="rgb(229,40,53)" rx="2" ry="2" />
<text  x="215.18" y="95.5" ></text>
</g>
<g >
<title>collector (654,184,254 samples, 21.84%)</title><rect x="916.9" y="85" width="257.7" height="15.0" fill="rgb(217,4,27)" rx="2" ry="2" />
<text  x="919.86" y="95.5" >collector</text>
</g>
<g >
<title>create_weight (15,083,314 samples, 0.50%)</title><rect x="1174.9" y="37" width="5.9" height="15.0" fill="rgb(222,39,8)" rx="2" ry="2" />
<text  x="1177.85" y="47.5" ></text>
</g>
<g >
<title>collector (779,799,280 samples, 26.04%)</title><rect x="385.9" y="85" width="307.3" height="15.0" fill="rgb(225,20,14)" rx="2" ry="2" />
<text  x="388.90" y="95.5" >collector</text>
</g>
<g >
<title>TermQuery (98,568,273 samples, 3.29%)</title><rect x="693.2" y="53" width="38.8" height="15.0" fill="rgb(217,13,17)" rx="2" ry="2" />
<text  x="696.19" y="63.5" >Ter..</text>
</g>
<g >
<title>BooleanQuery (200,514,555 samples, 6.70%)</title><rect x="693.2" y="69" width="79.0" height="15.0" fill="rgb(250,152,33)" rx="2" ry="2" />
<text  x="696.16" y="79.5" >BooleanQu..</text>
</g>
<g >
<title>build_scorer (461,722 samples, 0.02%)</title><rect x="693.2" y="37" width="0.2" height="15.0" fill="rgb(229,50,37)" rx="2" ry="2" />
<text  x="696.19" y="47.5" ></text>
</g>
<g >
<title>dailycounts (8,649,684 samples, 0.29%)</title><rect x="221.2" y="85" width="3.4" height="15.0" fill="rgb(209,146,29)" rx="2" ry="2" />
<text  x="224.20" y="95.5" ></text>
</g>
<g >
<title>query (200,514,555 samples, 6.70%)</title><rect x="693.2" y="85" width="79.0" height="15.0" fill="rgb(215,184,43)" rx="2" ry="2" />
<text  x="696.16" y="95.5" >query</text>
</g>
<g >
<title>build_leaf_collector (147,887,177 samples, 4.94%)</title><rect x="20.8" y="69" width="58.3" height="15.0" fill="rgb(214,168,50)" rx="2" ry="2" />
<text  x="23.83" y="79.5" >build_..</text>
</g>
<g >
<title>search (693,184,710 samples, 23.15%)</title><rect x="916.9" y="101" width="273.1" height="15.0" fill="rgb(249,61,46)" rx="2" ry="2" />
<text  x="919.86" y="111.5" >search</text>
</g>
<g >
<title>build_aggregation (32,805,547 samples, 1.10%)</title><rect x="777.4" y="69" width="13.0" height="15.0" fill="rgb(231,139,36)" rx="2" ry="2" />
<text  x="780.45" y="79.5" ></text>
</g>
<g >
<title>create_weight (100,102,204 samples, 3.34%)</title><rect x="732.7" y="53" width="39.5" height="15.0" fill="rgb(230,105,16)" rx="2" ry="2" />
<text  x="735.73" y="63.5" >cre..</text>
</g>
<g >
<title>build_scorer (503,172 samples, 0.02%)</title><rect x="1174.7" y="37" width="0.2" height="15.0" fill="rgb(238,36,38)" rx="2" ry="2" />
<text  x="1177.65" y="47.5" ></text>
</g>
<g >
<title>all (2,994,697,103 samples, 100%)</title><rect x="10.0" y="133" width="1180.0" height="15.0" fill="rgb(219,121,1)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>build_leaf_collector (8,320,253 samples, 0.28%)</title><rect x="774.1" y="69" width="3.3" height="15.0" fill="rgb(253,82,26)" rx="2" ry="2" />
<text  x="777.12" y="79.5" ></text>
</g>
<g >
<title>build_aggregation (8,209,732 samples, 0.27%)</title><rect x="376.9" y="69" width="3.2" height="15.0" fill="rgb(213,50,53)" rx="2" ry="2" />
<text  x="379.87" y="79.5" ></text>
</g>
<g >
<title>build_leaf_collector (13,691,895 samples, 0.46%)</title><rect x="911.4" y="69" width="5.4" height="15.0" fill="rgb(238,196,35)" rx="2" ry="2" />
<text  x="914.40" y="79.5" ></text>
</g>
<g >
<title>toplangs (20,779,834 samples, 0.69%)</title><rect x="908.7" y="85" width="8.2" height="15.0" fill="rgb(230,159,8)" rx="2" ry="2" />
<text  x="911.68" y="95.5" ></text>
</g>
<g >
<title>create_weight (9,126,412 samples, 0.30%)</title><rect x="212.3" y="37" width="3.6" height="15.0" fill="rgb(247,150,25)" rx="2" ry="2" />
<text  x="215.28" y="47.5" ></text>
</g>
<g >
<title>build_leaf_collector (8,232,129 samples, 0.27%)</title><rect x="80.8" y="69" width="3.3" height="15.0" fill="rgb(220,22,8)" rx="2" ry="2" />
<text  x="83.85" y="79.5" ></text>
</g>
<g >
<title>search (984,942,270 samples, 32.89%)</title><rect x="385.9" y="101" width="388.1" height="15.0" fill="rgb(240,117,13)" rx="2" ry="2" />
<text  x="388.90" y="111.5" >search</text>
</g>
<g >
<title>rewrite (4,628,435 samples, 0.15%)</title><rect x="772.2" y="85" width="1.8" height="15.0" fill="rgb(220,187,16)" rx="2" ry="2" />
<text  x="775.17" y="95.5" ></text>
</g>
<g >
<title>aggregations (188,173,475 samples, 6.28%)</title><rect x="10.0" y="101" width="74.1" height="15.0" fill="rgb(239,138,15)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >aggregat..</text>
</g>
<g >
<title>UR9Ad7zZQSemfSBY4xfFCA (536,005,612 samples, 17.90%)</title><rect x="10.0" y="117" width="211.2" height="15.0" fill="rgb(212,49,49)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >UR9Ad7zZQSemfSBY4xfFCA</text>
</g>
<g >
<title>create_weight (15,778,358 samples, 0.53%)</title><rect x="1181.7" y="53" width="6.2" height="15.0" fill="rgb(215,96,18)" rx="2" ry="2" />
<text  x="1184.70" y="63.5" ></text>
</g>
<g >
<title>x_Eedt9kR2Wqzd0IbQmmfg (1,055,777,298 samples, 35.25%)</title><rect x="774.0" y="117" width="416.0" height="15.0" fill="rgb(233,227,37)" rx="2" ry="2" />
<text  x="776.99" y="127.5" >x_Eedt9kR2Wqzd0IbQmmfg</text>
</g>
<g >
<title>search_top_hits (389,530 samples, 0.01%)</title><rect x="693.0" y="53" width="0.2" height="15.0" fill="rgb(236,114,5)" rx="2" ry="2" />
<text  x="696.01" y="63.5" ></text>
</g>
<g >
<title>build_leaf_collector (363,165,436 samples, 12.13%)</title><rect x="233.8" y="69" width="143.1" height="15.0" fill="rgb(241,38,51)" rx="2" ry="2" />
<text  x="236.75" y="79.5" >build_leaf_collector</text>
</g>
<g >
<title>toplangs (12,766,648 samples, 0.43%)</title><rect x="79.1" y="85" width="5.0" height="15.0" fill="rgb(227,154,19)" rx="2" ry="2" />
<text  x="82.12" y="95.5" ></text>
</g>
<g >
<title>build_aggregation (23,201,689 samples, 0.77%)</title><rect x="224.6" y="69" width="9.2" height="15.0" fill="rgb(231,156,9)" rx="2" ry="2" />
<text  x="227.61" y="79.5" ></text>
</g>
<g >
<title>aggregations (362,592,588 samples, 12.11%)</title><rect x="774.0" y="101" width="142.9" height="15.0" fill="rgb(247,41,41)" rx="2" ry="2" />
<text  x="776.99" y="111.5" >aggregations</text>
</g>
<g >
<title>build_aggregation (4,398,336 samples, 0.15%)</title><rect x="79.1" y="69" width="1.7" height="15.0" fill="rgb(205,129,33)" rx="2" ry="2" />
<text  x="82.12" y="79.5" ></text>
</g>
<g >
<title>dailycounts (4,182,990 samples, 0.14%)</title><rect x="10.0" y="85" width="1.6" height="15.0" fill="rgb(232,18,26)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>search (347,832,137 samples, 11.61%)</title><rect x="84.1" y="101" width="137.1" height="15.0" fill="rgb(218,33,13)" rx="2" ry="2" />
<text  x="87.15" y="111.5" >search</text>
</g>
<g >
<title>build_aggregation (23,309,467 samples, 0.78%)</title><rect x="11.6" y="69" width="9.2" height="15.0" fill="rgb(229,99,44)" rx="2" ry="2" />
<text  x="14.65" y="79.5" ></text>
</g>
<g >
<title>build_leaf_collector (14,463,201 samples, 0.48%)</title><rect x="380.1" y="69" width="5.7" height="15.0" fill="rgb(254,127,45)" rx="2" ry="2" />
<text  x="383.10" y="79.5" ></text>
</g>
<g >
<title>query (33,716,656 samples, 1.13%)</title><rect x="1174.6" y="85" width="13.3" height="15.0" fill="rgb(245,149,24)" rx="2" ry="2" />
<text  x="1177.63" y="95.5" ></text>
</g>
<g >
<title>build_scorer (2,299,242 samples, 0.08%)</title><rect x="1180.8" y="53" width="0.9" height="15.0" fill="rgb(207,225,29)" rx="2" ry="2" />
<text  x="1183.79" y="63.5" ></text>
</g>
<g >
<title>aggregation (326,297,589 samples, 10.90%)</title><rect x="1045.9" y="53" width="128.6" height="15.0" fill="rgb(238,185,27)" rx="2" ry="2" />
<text  x="1048.95" y="63.5" >aggregation</text>
</g>
<g >
<title>search_top_hits (284,786 samples, 0.01%)</title><rect x="1174.5" y="53" width="0.1" height="15.0" fill="rgb(254,143,53)" rx="2" ry="2" />
<text  x="1177.52" y="63.5" ></text>
</g>
</g>
</svg>
